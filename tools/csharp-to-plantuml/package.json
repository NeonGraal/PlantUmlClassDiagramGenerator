{
	"name": "csharp-to-plantuml",
	"displayName": "CSharp to PlantUML",
	"description": "Generator to create class-diagram of PlantUML from C# source code.",
	"version": "1.1.0",
	"preview": false,
	"publisher": "pierre3",
	"license": "MIT",
	"keywords": [
		"PlantUML",
		"class diagram",
		"C#"
	],
	"engines": {
		"vscode": "^1.31.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:csharp2plantuml.classDiagram"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "csharp2plantuml.classDiagram",
				"title": "C# to PlantUML: Class-diagram"
			}
		],
		"configuration": {
			"type": "object",
			"title": "C# to PlantUML configuration",
			"properties": {
				"csharp2plantuml.inputPath": {
					"type": "string",
					"scope": "resource",
					"default": "",
					"description": "Specify a input folder (relative to workspace folder)."
				},
				"csharp2plantuml.outputPath": {
					"type": "string",
					"scope": "resource",
					"default": "plantuml",
					"description": "Specify a output folder (relative to workspace folder)."
				},
				"csharp2plantuml.public": {
					"type": "boolean",
					"scope": "resource",
					"default": true,
					"description": "Only public accessibility members are output."
				},
				"csharp2plantuml.ignoreAccessibility": {
					"type": "string",
					"scope": "resource",
					"default": "",
					"description": "Specify accessibiliies of members to ignore, with a comma separated list. (ex. 'private,protected,protected internal')"
				},
				"csharp2plantuml.excludePath": {
					"type": "string",
					"scope": "resource",
					"default": "",
					"description": "Specify exclude file or directory paths (relative to the \"InputPath\"), with a comma separated list. (ex. 'obj,Properties\\AssemblyInfo.cs')"
				},
				"csharp2plantuml.fields": {
					"type": "boolean",
					"scope": "resource",
					"default": true,
					"description": "Create object associations from field and property references."
				},
				"csharp2plantuml.constructor": {
					"type": "boolean",
					"scope": "resource",
					"default": true,
					"description": "Create object associations from constructor parameter references."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"typescript": "^3.3.1",
		"vscode": "^1.1.28",
		"tslint": "^5.12.1",
		"@types/node": "^10.12.21",
		"@types/mocha": "^2.2.42"
	},
	"bugs": {
		"url": "https://github.com/pierre3/PlantUmlClassDiagramGenerator/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/pierre3/PlantUmlClassDiagramGenerator.git"
	},
	"homepage": "https://github.com/pierre3/PlantUmlClassDiagramGenerator/tree/master/tools/csharp-to-plantuml"
}
